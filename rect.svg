<?xml version='1.0' standalone='no'?>
<!DOCTYPE svg PUBLIC '-//W3C//DTD SVG 20001102//EN' 'http://www.w3.org/TR/2000/CR-SVG-20001102/DTD/svg-20001102.dtd'>

<svg width="100%" height="100%" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"
onload='Init(evt)' onmousedown='Grab(evt)' onmousemove='Drag(evt)' onmouseup='Drop(evt)'>
	<script><![CDATA[
		var svgns = 'http://www.w3.org/2000/svg';
		var SVGDocument = null;
		var SVGRoot = null;	
		var TrueCoords = null;
		var GrabPoint = null;
		var BackDrop = null;
		var DragTarget = null;
			
		function CreateRect(fillColor, strokeColor, strokeWidth, x, y, width, height, fillOpacity)
		{
			var block = SVGDocument.createElementNS(svgns, 'rect');
			block.setAttributeNS(null, 'id', 'block_' + fillColor);
			block.setAttributeNS(null, 'x', x);
			block.setAttributeNS(null, 'y', y);
			block.setAttributeNS(null, 'width',  width);
			block.setAttributeNS(null, 'height',  height);
			block.setAttributeNS(null, 'fill',  fillColor);
			block.setAttributeNS(null, "fill-opacity", fillOpacity);
			block.setAttributeNS(null, 'stroke',  strokeColor);
			block.setAttributeNS(null, 'stroke-width',  strokeWidth);
			return block;
		};	
		
		//generates a quasi-random number in the ranges between the two parameters
		RandomNum.today = new Date();
		RandomNum.seed = RandomNum.today.getTime();
		function RandomNum(min, max)
		{
			var range = Number(max) - Number(min);
			var offset = 0;
			if (0 == min)
			{
				range = max + 1;
				offset = 1;
			}
			else if (0 > min)
			{
				range += 1;
				offset = 1;
			}
			RandomNum.seed = (RandomNum.seed * 9301 + 49297) % 233280;
			var result = Math.ceil(RandomNum.seed / (233280.0) * range);
			return Number(result) + Number(min) - offset;
		};		
		  
		function Init(evt)
		{
			SVGDocument = evt.target.ownerDocument;
			SVGRoot = SVGDocument.documentElement;       		
			TrueCoords = SVGRoot.createSVGPoint();
			GrabPoint = SVGRoot.createSVGPoint();
			BackDrop = SVGDocument.getElementById('BackDrop');				 
			
			for(var i=0, l=10; i<l; ++i)
			{
				SVGRoot.appendChild(CreateRect('white', '#4f81bd', 3, RandomNum(50, 500), RandomNum(50, 500), 50, 50, 1));
			}			
			
			SVGRoot.appendChild(CreateRect('white', '#f79646', 3, 10, 10, 300, 200, 0));
			SVGRoot.appendChild(CreateRect('white', '#f79646', 3, 10, 10, 400, 300, 0));
		}	  
		  
		function Grab(evt)
		{
			var targetElement = evt.target;
			if ( BackDrop != targetElement )
			{
				DragTarget = targetElement;
				DragTarget.parentNode.appendChild( DragTarget );
				DragTarget.setAttributeNS(null, 'pointer-events', 'none');
				var transMatrix = DragTarget.getCTM();
				GrabPoint.x = TrueCoords.x - Number(transMatrix.e);
				GrabPoint.y = TrueCoords.y - Number(transMatrix.f);
			}
		};
		  
		function Drag(evt)
		{
			GetTrueCoords(evt);
			if (DragTarget)
			{
				var newX = TrueCoords.x - GrabPoint.x;
				var newY = TrueCoords.y - GrabPoint.y;
				DragTarget.setAttributeNS(null, 'transform', 'translate(' + newX + ',' + newY + ')');
			}
		};

		function Drop(evt)
		{
			if ( DragTarget )
			{
				var targetElement = evt.target;
				DragTarget.setAttributeNS(null, 'pointer-events', 'all');
				DragTarget = null;
			}
		};

		function GetTrueCoords(evt)
		{
			var newScale = SVGRoot.currentScale;
			var translation = SVGRoot.currentTranslate;
			TrueCoords.x = (evt.clientX - translation.x)/newScale;
			TrueCoords.y = (evt.clientY - translation.y)/newScale;
		};	 
	]]></script>
	<rect id='BackDrop' x='-10%' y='-10%' width='110%' height='110%' fill='none' pointer-events='all' />
 </svg>